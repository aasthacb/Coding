Kadane's Algorithm efficiently finds the maximum sum of a contiguous subarray in linear time

class Solution:
    def maxSubArray(self, nums: list[int]) -> int:
        # Initialize variables
        max_sum = nums[0]
        current_sum = nums[0]

        # Iterate through the array starting from the second element
        for num in nums[1:]:
            # Update the current_sum to the maximum of num or current_sum + num
            current_sum = max(num, current_sum + num)
            # Update max_sum if current_sum is greater
            max_sum = max(max_sum, current_sum)

        return max_sum
