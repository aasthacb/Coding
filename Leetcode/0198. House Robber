class Solution:
    def rob(self, nums: List[int]) -> int:

        n = len(nums)

        if n == 1 : return nums[0]

        dp = [0] * n  #dp[i] represents max cash that can be stolen till ith day

        dp[0] = nums[0]
        dp[1] = max(nums[0],nums[1])

        for i in range(2,n):
            option1 = dp[i-1]  #skipping current house thus considering max cash till (i-1)th house
            option2 = nums[i] + dp[i-2]  #stealing from current house thus curr house cash + cash till (i-2)th house
            dp[i] = max(option1,option2)

        return dp[n-1]  #max cash stolen till last house
                    
