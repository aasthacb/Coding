class Stack():
    def __init__(self):
        self.items = []

    def push(self,item):
        self.items.append(item)

    def pop(self):
        if not self.is_empty():
            return self.items.pop()
        return -1

    def is_empty(self):
        return len(self.items) == 0

class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        brackets = {')' : '(' , '}' : '{' , ']' : '['}
        openb = set("[{(")
        stack = Stack()

        for b in s:
            if b in openb:
                stack.push(b)
            else:
                if brackets[b] != stack.pop():
                    return False
        
        return stack.is_empty()


        
