https://leetcode.com/problems/n-queens/description/

class Solution(object):
    def solveNQueens(self, n):
        """
        :type n: int
        :rtype: List[List[str]]
        """
        board = [['.'] * n for i in range (n)]
        columns = set()
        positive_diagonals = set() #r+c constant
        negative_diagonals = set() #r-c constant
        res = []

        def backtrack(row):

            if row == n : #1 Q placed in all rows
                copy = [''.join(row) for row in board]
                res.append(copy)
                return
            
            for col in range(n):
                if col in columns or row+col in positive_diagonals or row-col in negative_diagonals:
                    continue

                columns.add(col)
                positive_diagonals.add(row+col)
                negative_diagonals.add(row-col)
                board[row][col] = 'Q'

                backtrack(row+1)

                columns.remove(col)
                positive_diagonals.remove(row+col)
                negative_diagonals.remove(row-col)
                board[row][col] = "."

        backtrack(0)
        return res

        
