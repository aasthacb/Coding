https://leetcode.com/problems/daily-temperatures/?envType=study-plan-v2&envId=leetcode-75

my original soln : giving TLE. 
class Solution:
    def dailyTemperatures(self, temperatures: List[int]) -> List[int]:
        result = []
        for day in range (len(temperatures)):
            length = 0
            for remday in range(day+1,len(temperatures)):
                if temperatures[remday] > temperatures[day]:
                    length = remday - day
                    break
            result.append(length)
        return result

gotta use Monotonic Stacks
reference material for Monotonic Stack:
https://leetcode.com/discuss/study-guide/2347639/A-comprehensive-guide-and-template-for-monotonic-stack-based-problems#:~:text=Monotonic%20stacks%20are%20generally%20used,to%20solve%20variety%20of%20problems.

class Solution:
    def dailyTemperatures(self, temperatures: List[int]) -> List[int]:
        stack = []
        result = [0] * len(temperatures)
        for i in range (len(temperatures)):
            while stack and temperatures[stack[-1]] < temperatures[i]:
                stacktop = stack.pop()
                result[stacktop] = i - stacktop
            stack.append(i)
        return result
